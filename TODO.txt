TODO: 
	FIX: black background when having transparent background (1h) 
		(normal rendering works, only the portion not working) []
		
	NORMALIZED COORDINATE SYSTEM (4h) []
		-> coordinate goes from -1 to 1 on each axis (the horizontal might be larger than abs(1) cause it's longer :v)

	USING TILED SPRITE SHEET (2h) []
		-> FUTURE:  write a python program (or a class in the game itself) to take an abitrary sprite sheet 
					and output the frames into a json file which contains the rect of each frames 

	ROUGH CAMERA SYSTEM (4h) []
		-> can show part of the screen and move around 

	ROUGH PHYSICS  (2h) []
		-> (COLLISION, MOVING, JUMPING)

DONE: 
	USING TILED SPRITE SHEET (2h) [X]
		-> load a single texture into an array of animation using 2 inputs: rows, columns  
	ROUGH ANIMATION SYSTEM (2h) [X]
	DOUBLE BUFFERING SO THAT WE DON'T SEE THE TEAR ON THE SCREEN (2h) [X] - we still saw the tear, kinda :))
	GAME LOOP WITH GOOD TIMING IN SDL2 (2h) [X]
	GET THE GAME INPUT WORKING (1h) [X]
	ROUGH CONTROL (2h) [X]
	PLATFORM INDEPENDENT THE WHOLE THING (2h) [X]nternet (kind of)