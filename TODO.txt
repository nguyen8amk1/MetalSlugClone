DEADLINE: 
	Animation work til the end of this week (26/7/2023)
	The next week we will work on the actual level1: map, camera, enemies placement  

TODO: 
	FINISH THE BASIC SPRITESHEET ANIMATION FOR THE PLAYER IN PTS (2h) [] @Current - the leg is still not done 

	DO THE ACTUAL GOOD LOOKING ANIMATION (2h) []

	REFACTOR THE PLAYER RELATED CODE INTO PLAYER CLASS (2h) []

	LOAD THE ANIMATION METADATA FROM A FILE SO THAT NO NEED TO RECOMPILE (2h) []

	GRENADE (2h) []
		BOUNCE: 
		-> a bounce is jumps with reduce height every time hit the ground 

	ENEMY (2h) []

	ENEMY INTERACTION WITH PLAYER (2h) []

	PLACE ALL THE STUFF ON THE LEVEL (4h) [] -  by all the stuff i mean the enemy solders and hostages, 
												the boss fight and houses and things could wait 

	INPUT BUFFERING FOR GAMEPLAY MOVEMENT (4h) []

	CLEAN THE PROJECT STRUCTOR: EACH BACKEND IN IT'S OWN FOLDER (1h) []


	WHEN SHOULD WE WRITE A LEVEL EDITOR ?? []
		-> when level1 done, have proper structure for a level, a separate file for level 

	PARALAX BACKGROUND (2h) []

	RENDER ONLY PART OF THE MAP (2h) []
		-> get the portion of the map and only render that part 
		-> may be get 2 mapsize portion so that the scrolling smoother
		-> only get new portion when the camera get's move by so much :v (event = camera move by X -> append new portion)

	PHAN HOACH KHONG GIAN (4h) []

	DESTROY ALL THE FONT RESOURCES AFTER USING (SDL DESTROY) -> CURRENTLY HAVE MEMORY LEAKS (1H) []

BUG: 
	THE FRAMES LOOK DISTORED BECAUSE THE CALCULATED AXIS IS KINDA OFF []  
	
DONE: 
	FULLSCREEN BUG: AFTER TOGGLE THE FULLSCREEN VS SMALLSCREEN, TEXTURE TURN BLACK
	FIX: black background when having transparent background (2h) 
		(normal rendering works, only the portion not working) [X]

	FIX THE SLOW UPDATING OF MOVING IMAGE FIRST THEN SOLVE THIS ONE LATER  [X]

	FIX: THERE ARE SOME FLICKERING WITH THE OLD POSITION WHEN CHANGING TO THE NEXT ANIMATION [X]
		i notice that the flickering occur when i release the button 
		and the next animation show it original position then shifted back to player position
		this could be a foundational error when the image position just keep sliding when i'm moving 

	DO THE PLAYER ANIMATION CHANGING (2h) [X]
		-> Desc: animation states: IDLE, JUMP, FALL, WALK (with direction as well) > Each just a frame 
		-> animation state changing now works (2h) [X]
		-> do the animation changing (2h) [X] 
		-> do the animation flip (1h) [X] 
	
	ATTACH THE ANIMATION WITH THE COLLIDER (4h) [X]
		-> just attach animation pos with the collider, that will work [X]

	HAVE A DATASTRUCTURE FOR ANIMATION (4h) []
		-> load the animation using the data structure [X]
		target: Load Marco Rossi character [X]
			-> first loading the first half [X]
			-> load the second half [X]
			-> attach both of them [X]
	COLLISION RESOLVER PROBLEM (4h) [X]
		-> using SweptAABB should fix the problem 
		-> look into the Separating Axis Theorem (SAT) or the Circle-Circle 
		IMPLEMENT THE SWEPTAABB 

	ROUGH CAMERA SYSTEM (4h) [X] 
		-> load the mission1_level and test the camera [X]
	ROUGH PHYSICS  (2h) [X]
		-> COLLISION: [X]
			-> box collider 
			-> circle collider (do this first)
			-> line collision 
			-> capsule collision 

		PHAKE PHYSICS: @Backburner - done 50%
			all the physics will be just state machine and interpolation with different ease function
			state: 
				jump -> from bottom to peak 
				fall -> from peak to bottom (or some ) -> gravity is just fall state 
				onground -> just pure left and right move - no fall, no jump

			let's consider moving (left, right - raw translate no animation or anything) is not a state machine:)) 
				-> so that it can combine with both jump and fall 

			 -> PHYSICS STATE MACHINE DIFFERENT FROM ANIMATION STATE MACHINE 
			 -> LET'S MAKES A PHYSICS STATE MACHINE: 
				state: 
					onground -> just pure left and right move - no fall, no jump @1st 
					jump -> from bottom to peak 
					fall -> from peak to bottom (or some ) -> gravity is just fall state 

	SHOWING DEBUG INFO (2h) [X]
		text: Millis per frame: 42.1196, FPS: 23.7419  [X]

		line: line collider [X]
		dot [X]
		rectangle: box collider  [X]
		circle: circle collider  [X]

	GO FULL SCREEN (2h) [X]
		2 solutions: 
			use fixed resolution then scale it up (this one seems simpler) -> @@@ use this 
			or scale everything to match the solution ?? 
	NORMALIZED COORDINATE SYSTEM (4h) [X]
		-> coordinate goes from -1 to 1 on each axis (the horizontal might be larger than abs(1) cause it's longer :v)
		-> use the normalized coord in the game code 
		-> the backend gonna translate convert it back to the one it needs 
	USING TILED SPRITE SHEET (2h) [X]
		-> load a single texture into an array of animation using 2 inputs: rows, columns  
	ROUGH ANIMATION SYSTEM (2h) [X]
	DOUBLE BUFFERING SO THAT WE DON'T SEE THE TEAR ON THE SCREEN (2h) [X] - we still saw the tear, kinda :))
	GAME LOOP WITH GOOD TIMING IN SDL2 (2h) [X]
	GET THE GAME INPUT WORKING (1h) [X]
	ROUGH CONTROL (2h) [X]
	PLATFORM INDEPENDENT THE WHOLE THING (2h) [X]nternet (kind of)